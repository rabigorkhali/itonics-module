<?php

/**
 * @file
 * Custom functions for this site.
 */

/**
 * Implements hook_menu().
 */
function rabigorkhali_itonics_products_menu()
{

    $items['admin/itonics/products/add'] = array(
        'title' => 'Itonics Products',
        'description' => 'View Itonics Products.',
        'page callback' => 'rabigorkhali_itonics_products_block_view',
        'access arguments' => array('access rabigorkhali_itonics_products'),
        'weight' => -14,
    );

    $items['admin/itonics/products/%/edit'] = array(
        'title' => 'Itonics Products',
        'description' => 'View Itonics Products.',
        'page callback' => 'rabigorkhali_itonics_products_edit_block_view',
        'page argument' => array(3),
        'access arguments' => array('access rabigorkhali_itonics_products'),
        'weight' => -14,
    );

    $items['admin/itonics/products/%/delete'] = array(
        'title' => 'Itonics Products',
        'description' => 'View Itonics Products.',
        'page callback' => 'my_custom_delete',
        'page argument' => array(3),
        'access arguments' => array('access rabigorkhali_itonics_products'),
        'weight' => -14,
    );

    $items['admin/itonics/products'] = array(
        'title' => 'Itonics Products',
        'description' => 'View Itonics Products.',
        'page callback' => 'rabigorkhali_itonics_products_sort_with_pager_content',
        'access arguments' => array('access rabigorkhali_itonics_products'),
        'weight' => -14,
    );
    return $items;

    // return $items;
}

/**
 * Implements hook_block_view().  
 */
function rabigorkhali_itonics_products_block_view($block_name = "")
{

    // in my example I show the form only in the front page.
    // You can show it where you want, obviously
    if (drupal_is_front_page()) {
        return NULL;
    }

    $form = drupal_get_form('rabigorkhali_itonics_products_form');
    $block = array(
        'content' => $form,
    );
    return $block;
}

function rabigorkhali_itonics_products_form($form, &$form_state)
{
    // now I add a text field to the form
    $form['rabigorkhali_itonics_products_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#description' => t('The Title of the Itonics Products.'),
        '#size' => 40,
        '#maxlength' => 120,
        '#required' => TRUE,
    );
    $form['rabigorkhali_itonics_products_image'] = array(
        '#type' => 'managed_file',
        '#title' => t('Image'),
        '#upload_location' => 'public://rabigorkhali_itonics_products/',
    );

    $form['rabigorkhali_itonics_products_summary'] = array(
        '#type' => 'textarea',
        '#rows' => 5,
        '#title' => t('Summary'),
        '#description' => t('A brief summary of the ITONICS Product.'),
    );

    // Text Format for the Description (using WYSIWYG)
    $form['rabigorkhali_itonics_products_description'] = array(
        '#type' => 'text_format',
        '#title' => t('Description'),
        '#format' => 'full_html',
        '#required' => TRUE,
        '#description' => t('The detailed description of the ITONICS Product using rich text formatting.'),
    );

    // Select List for Category (multi-select)
    $form['rabigorkhali_itonics_products_category'] = array(
        '#type' => 'select',
        '#title' => t('Category'),
        '#options' => array(
            'Category 1' => 'Category 1',
            'Category 2' => 'Category 2',
            'Category 3' => 'Category 3',
        ),
        '#multiple' => TRUE,
        '#required' => TRUE,
        '#description' => t('Select one or more categories for the ITONICS Product.'),
    );

    // Radios for Type (single select)
    $form['rabigorkhali_itonics_products_type'] = array(
        '#type' => 'radios',
        '#title' => t('Type'),
        '#options' => array(
            'Type 1' => 'Type 1',
            'Type 2' => 'Type 2',
            'Type 3' => 'Type 3',
        ),
        '#required' => TRUE,
        '#description' => t('Select the type of the ITONICS Product.'),
    );

    // Textfield for Owner Email
    $form['rabigorkhali_itonics_products_owner_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Owner Email'),
        '#size' => 40,
        '#maxlength' => 255,
        '#required' => TRUE,
        '#description' => t('Enter the email address of the product owner.'),
    );

    // Date Popup for Expiry Date
    $form['rabigorkhali_itonics_products_expiry_date'] = array(
        '#type' => 'date_popup',
        '#title' => t('Expiry Date'),
        '#date_format' => 'Y-m-d',
        '#description' => t('Select the expiry date of the ITONICS Product.'),
        '#showCloseButton' => TRUE,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );
    // and now I assign a my function as handler of the submit event
    // $form['#validate'][] = 'rabigorkhali_itonics_products_submit_handler';
    $form['#submit'][] = 'rabigorkhali_itonics_products_submit_handler';
    return $form;
}

function rabigorkhali_itonics_products_submit_handler($form, &$form_state)
{
    // this function will be executed after the click
    // event of the user on the “submit” button.
    // here I only print a message
    // you can access a database, redirect, or whatever you want, obviously
    $error = 1;
    if (!isset($form_state['values']['rabigorkhali_itonics_products_title']) || !isset($form_state['values']['rabigorkhali_itonics_products_title'])) {
        $error = 0;
    }

    if ($error) {
        $file = file_save_upload('rabigorkhali_itonics_products_image', array(
            'file_validate_is_image' => array(),
            'file_validate_extensions' => array('png gif jpg jpeg'),
        ));

        if ($file) {
            // File uploaded successfully
            $fid = $file->fid;
        } else {
            // Handle file upload error (if needed)
            $fid = 0; // Default value or error handling as required
        }
        $rabigorkhali_itonics_products_title = $form_state['values']['rabigorkhali_itonics_products_title'];
        $rabigorkhali_itonics_products_description = $form_state['values']['rabigorkhali_itonics_products_description']['value']; // Extract the value from the text_format element
        $rabigorkhali_itonics_products_summary = $form_state['values']['rabigorkhali_itonics_products_summary'];
        $rabigorkhali_itonics_products_category = implode(', ', array_keys($form_state['values']['rabigorkhali_itonics_products_category'])); // Convert array to comma-separated string
        $rabigorkhali_itonics_products_type = $form_state['values']['rabigorkhali_itonics_products_type'];
        $rabigorkhali_itonics_products_owner_email = $form_state['values']['rabigorkhali_itonics_products_owner_email'];

        // Insert into the database
        $nid = db_insert('rabigorkhali_itonics_products')
            ->fields(array(
                'title' => $rabigorkhali_itonics_products_title,
                'description' => $rabigorkhali_itonics_products_description,
                'summary' => $rabigorkhali_itonics_products_summary,
                'category' => $rabigorkhali_itonics_products_category,
                'type' => $rabigorkhali_itonics_products_type,
                'owner_email' => $rabigorkhali_itonics_products_owner_email,
                'image' => $fid, // Assuming 'image_fid' is the column name for storing file IDs
            ))
            ->execute();
        drupal_set_message(t('Record has been added!'));
    }
}

/* pass data to edit form */
function rabigorkhali_itonics_products_sort_with_pager_content()
{
    $header = array(
        array('data' => t('Custom id'), 'field' => 'id', 'sort' => 'asc'),
        array('data' => t('Title'), 'field' => 'title'),
        array('data' => t('Description'), 'field' => 'description'),
        array('data' => t('Summary'), 'field' => 'summary'),
        array('data' => t('Category'), 'field' => 'category'),
        array('data' => t('Type'), 'field' => 'type'),
        array('data' => t('Owner Email'), 'field' => 'owner_email'),
        array('data' => t('Expiry Date'), 'field' => 'expiry_date'),
        array('data' => t('Image'), 'field' => 'image'),
        array('data' => t('Status'), 'field' => 'status'),
        array('data' => t('Action')),
    );

    $query = db_select('rabigorkhali_itonics_products', 'c');
    $query->fields('c', array('id', 'title', 'description', 'summary', 'category', 'type', 'owner_email', 'expiry_date', 'image', 'status'));

    $table_sort = $query->extend('TableSort') // Add table sort extender.
        ->orderByHeader($header); // Add order by headers.
    $pager = $table_sort->extend('PagerDefault')
        ->limit(5);
    $result = $pager->execute();

    $rows = array();
    foreach ($result as $res) {
        // Prepare image output
        $image_output = '';
        if (!empty($res->image)) {
            $file = file_load($res->image);
            $image_output = theme('image_style', array(
                'style_name' => 'thumbnail', // Adjust image style as needed
                'path' => $file->uri,
                'alt' => $file->filename,
                'title' => $file->filename,
            ));
        }

        $rows[] = array(
            'data' => array(
                $res->id,
                $res->title,
                $res->description,
                $res->summary,
                $res->category,
                $res->type,
                $res->owner_email,
                date('Y-m-d', $res->expiry_date), // Assuming expiry_date is stored as Unix timestamp
                $image_output,
                $res->status,
                l('Edit', 'admin/itonics/products/' . $res->id . '/edit') . ' | ' . l('Delete', 'admin/itonics/products/' . $res->id . '/delete')
            )
        );
    }

    // If rows are not empty theme and display the rows.
    if (!empty($rows)) {
        $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
        $output .= theme('pager');
    } else {
        $output = t("No results found.");
    }

    // Add new record link
    $output .= l(t('Add new record'), 'admin/itonics/products/add', array('attributes' => array('class' => array('button'))));

    return $output;
}



function my_custom_delete()
{
    $id = arg(3);
    $num_updated = db_delete('rabigorkhali_itonics_products')
        ->condition('id', $id, '=')
        ->execute();
    drupal_set_message(t('Record has been deleted!'));
    drupal_goto("admin/itonics/products/");
}

/**
 * Implements hook_block_view().
 */
function rabigorkhali_itonics_products_edit_block_view($block_name = "")
{

    // in my example I show the form only in the front page.
    // You can show it where you want, obviously
    if (drupal_is_front_page()) {
        return NULL;
    }

    $form = drupal_get_form('rabigorkhali_itonics_products_edit_form');
    $block = array(
        // 'subject' => t('Subject'),
        'content' => $form,
    );
    $block['content'][] .= '
Back to Listing';
    return $block;
}

/* setting up edit form html and data */
/**
 * Form builder for editing Itonics Products.
 */
function rabigorkhali_itonics_products_edit_form($form, &$form_state)
{
    $id = arg(3);
    $result = db_query('SELECT * FROM {rabigorkhali_itonics_products} WHERE id = :tid', array(':tid' => $id));
    $record = $result->fetchObject();

    $form['rabigorkhali_itonics_products_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#default_value' => $record->title,
        '#description' => t('The Title of the Itonics Products.'),
        '#size' => 40,
        '#maxlength' => 120,
        '#required' => TRUE,
    );

    // Textarea for the description
    $form['rabigorkhali_itonics_products_description'] = array(
        '#type' => 'textarea',
        '#rows' => 10,
        '#columns' => 40,
        '#title' => t('Description'),
        '#default_value' => $record->description,
        '#required' => TRUE,
        '#description' => t('The text of Itonics Products.'),
    );

    // Summary field
    $form['rabigorkhali_itonics_products_summary'] = array(
        '#type' => 'textfield',
        '#title' => t('Summary'),
        '#default_value' => $record->summary,
        '#description' => t('A summary of the Itonics Product.'),
        '#size' => 60,
        '#maxlength' => 255,
        '#required' => TRUE,
    );

    // Category select list
    // Example options - replace with your actual category options
    $categories = array(
        'Category 1' => 'Category 1',
        'Category 2' => 'Category 2',
        'Category 3' => 'Category 3',
    );
    $form['rabigorkhali_itonics_products_category'] = array(
        '#type' => 'select',
        '#title' => t('Category'),
        '#default_value' => $record->category ? unserialize($record->category) : array(),
        '#options' => $categories,
        '#multiple' => TRUE,
        '#required' => TRUE,
        '#description' => t('Select categories for the Itonics Product.'),
    );

    // Type radio buttons
    // Example options - replace with your actual type options
    $types = array(
        'Type 1' => 'Type 1',
        'Type 2' => 'Type 2',
        'Type 3' => 'Type 3',
    );
    $form['rabigorkhali_itonics_products_type'] = array(
        '#type' => 'radios',
        '#title' => t('Type'),
        '#default_value' => $record->type,
        '#options' => $types,
        '#required' => TRUE,
        '#description' => t('Select type for the Itonics Product.'),
    );

    // Owner Email textfield
    $form['rabigorkhali_itonics_products_owner_email'] = array(
        '#type' => 'textfield',
        '#title' => t('Owner Email'),
        '#default_value' => $record->owner_email,
        '#size' => 40,
        '#maxlength' => 255,
        '#required' => TRUE,
        '#description' => t('Email address of the owner of the Itonics Product.'),
    );

    // Expiry Date datepicker
    $form['rabigorkhali_itonics_products_expiry_date'] = array(
        '#type' => 'date_popup',
        '#title' => t('Expiry Date'),
        '#default_value' => $record->expiry_date??date('Y-m-d'), // Convert Unix timestamp to date format
        '#required' => TRUE,
        '#description' => t('Date when the Itonics Product expires.'),
    );

    // Image upload field
    $form['rabigorkhali_itonics_products_image'] = array(
        '#type' => 'file',
        '#title' => t('Product Image'),
        '#description' => t('Upload a new image for the Itonics Product.'),
        '#upload_location' => 'public://products/', // Adjust upload directory as needed
    );

    // Display current image if exists
    if (!empty($record->image)) {
        $file = file_load($record->image);
        $image_output = theme('image_style', array(
            'style_name' => 'thumbnail', // Adjust image style as needed
            'path' => $file->uri,
            'alt' => $file->filename,
            'title' => $file->filename,
        ));
        $form['current_image'] = array(
            '#markup' => $image_output,
            '#prefix' => '<div id="current-image">',
            '#suffix' => '</div>',
        );

        // Add checkbox to delete current image
        $form['delete_image'] = array(
            '#type' => 'checkbox',
            '#title' => t('Delete Current Image'),
            '#default_value' => FALSE,
            '#description' => t('Check this box if you want to delete the current image.'),
        );
    }

    // Hidden ID field
    $form['id'] = array(
        '#type' => 'hidden',
        '#value' => $id,
    );

    // Checkbox for status
    $form['rabigorkhali_itonics_products_status'] = array(
        '#type' => 'checkbox',
        '#title' => t('Status'),
        '#default_value' => $record->status,
        '#description' => t('Indicates whether the Itonics Product is active or inactive.'),
    );

    // Submit button
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Save'),
    );

    // Submit handler
    $form['#submit'][] = 'rabigorkhali_itonics_products_edit_submit_handler';

    return $form;
}




/* this function saves the data in db in update action */

/**
 * Submit handler for editing Itonics Products.
 */
function rabigorkhali_itonics_products_edit_submit_handler($form, &$form_state)
{
    $error = FALSE;
    // Check if required fields are set and not empty
    if (
        !isset($form_state['values']['rabigorkhali_itonics_products_title']) || empty($form_state['values']['rabigorkhali_itonics_products_title']) ||
        !isset($form_state['values']['rabigorkhali_itonics_products_description']) || empty($form_state['values']['rabigorkhali_itonics_products_description']) ||
        !isset($form_state['values']['rabigorkhali_itonics_products_summary']) || empty($form_state['values']['rabigorkhali_itonics_products_summary']) ||
        !isset($form_state['values']['rabigorkhali_itonics_products_category']) || empty($form_state['values']['rabigorkhali_itonics_products_category']) ||
        !isset($form_state['values']['rabigorkhali_itonics_products_type']) || empty($form_state['values']['rabigorkhali_itonics_products_type']) ||
        !isset($form_state['values']['rabigorkhali_itonics_products_owner_email']) || empty($form_state['values']['rabigorkhali_itonics_products_owner_email'])
    ) {
        $error = TRUE;
    }
    if (!$error) {
        $id = $form_state['values']['id'];
        $rabigorkhali_itonics_products_title = $form_state['values']['rabigorkhali_itonics_products_title'];
        $rabigorkhali_itonics_products_description = $form_state['values']['rabigorkhali_itonics_products_description'];
        $rabigorkhali_itonics_products_summary = $form_state['values']['rabigorkhali_itonics_products_summary'];
        $rabigorkhali_itonics_products_category = $form_state['values']['rabigorkhali_itonics_products_category'];
        $rabigorkhali_itonics_products_type = $form_state['values']['rabigorkhali_itonics_products_type'];
        $rabigorkhali_itonics_products_owner_email = $form_state['values']['rabigorkhali_itonics_products_owner_email'];
        $rabigorkhali_itonics_products_expiry_date = $form_state['values']['rabigorkhali_itonics_products_expiry_date'];

        // Check if expiry date is valid

        // Format the expiry date for database insertion
        $rabigorkhali_itonics_products_expiry_date = sprintf('%04d-%02d-%02d', $rabigorkhali_itonics_products_expiry_date['year'], $rabigorkhali_itonics_products_expiry_date['month'], $rabigorkhali_itonics_products_expiry_date['day']);

        // Update data array
        $data = array(
            'title' => $rabigorkhali_itonics_products_title,
            'description' => $rabigorkhali_itonics_products_description,
            'summary' => $rabigorkhali_itonics_products_summary,
            'category' => serialize($rabigorkhali_itonics_products_category), // Serialize for multiple values
            'type' => $rabigorkhali_itonics_products_type,
            'owner_email' => $rabigorkhali_itonics_products_owner_email,
            'expiry_date' => $rabigorkhali_itonics_products_expiry_date,
        );

        // Handle image update if file is uploaded
        if (!empty($form['rabigorkhali_itonics_products_image'])) {
            $file = file_save_upload('rabigorkhali_itonics_products_image', array(
                'file_validate_is_image' => array(), // Ensure it's an image file
                'file_validate_extensions' => array('png gif jpg jpeg'), // Allowed file types
            ));

            if ($file) {
                // Save the file
                if ($file = file_move($file, 'public://products/')) {
                    $data['image'] = $file->fid;

                    // Delete old image if checkbox is checked
                    if (!empty($form_state['values']['delete_image'])) {
                        file_delete(file_load($record->image));
                        $data['image'] = NULL; // Reset image field in database
                    }
                }
            }
        }
        //delete
        if (!empty($form_state['values']['rabigorkhali_itonics_products_image'])) {
            $file = file_save_upload('rabigorkhali_itonics_products_image', array(
                'file_validate_is_image' => array(), // Ensure it's an image file
                'file_validate_extensions' => array('png gif jpg jpeg'), // Allowed file types
            ));

            if ($file) {
                // Save the file
                if ($file = file_move($file, 'public://products/')) {
                    $data['image'] = $file->fid;

                    // Delete old image if checkbox is checked
                    if (!empty($form_state['values']['delete_image'])) {
                        // Load the record again to get the current image fid
                        $result = db_query('SELECT image FROM {rabigorkhali_itonics_products} WHERE id = :id', array(':id' => $id));
                        $record = $result->fetchObject();
                        if ($record && isset($record->image)) {
                            file_delete(file_load($record->image));
                            $data['image'] = NULL; // Reset image field in database
                        }
                    }
                }
            }
        } elseif (!empty($form_state['values']['delete_image'])) {
            // Delete old image if only checkbox is checked without new upload
            // Load the record again to get the current image fid
            $result = db_query('SELECT image FROM {rabigorkhali_itonics_products} WHERE id = :id', array(':id' => $id));
            $record = $result->fetchObject();
            if ($record && isset($record->image)) {
                file_delete(file_load($record->image));
                $data['image'] = NULL; // Reset image field in database
            }
        }
        //end delete

        // Update database
        $num_updated = db_update('rabigorkhali_itonics_products')
            ->fields($data)
            ->condition('id', $id)
            ->execute();

        drupal_set_message(t('Record has been updated!'));
    } else {
        drupal_set_message(t('Error: Please fill in all required fields.'), 'error');
    }
}


/**
 * Implements hook_permission().
 */
function rabigorkhali_itonics_products_permission()
{
    return array(
        'access rabigorkhali_itonics_products' => array(
            'title' => t('View Itonics Products'),
            // Note: We translate the 'Administer blocks' permission string here with
            // a separate t() call, to make sure it gets the same translation as when
            // it's in block_permission().
            'description' => t('Customizing the Itonics Products requires the !permission-name permission.', array(
                '!permission-name' => l(t('Administer blocks'), 'admin/people/permissions', array('fragment' => 'module-block')),
            )),
        ),
    );
}
